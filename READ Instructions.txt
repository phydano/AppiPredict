Name of the Project: iPredict Android App
Developer: Dano Phy (Intern) - Victoria University of Wellington
Company: iPredict Ltd.

This document provides an intro and explains the Activities and Classes used in the project plus how to install/run the program. 
The breakdown is as follows:

	0. Intro 
	1. Activities
	2. Classes
	3. Layout
	4. Install/Run Instruction
	5. Activity Flow
	6. Future Work
	7. Bugs and Other things

0. Intro:
--------

I have developed this application by myself with only a small background in Android and learnt as I go. Therefore there could be some 
major bugs and memory leaked here and there. I have tried to fix as much as I can but since iPredict currently winded down its 
operation and my contract almost comes to an end, I would like to pass on what I have done so far (I have added alot of comments
and structured my code as clean as I can, and I hope that it would be easy to read =D). 


---------------------------------------------------------------------------------------------------------

1. Activities:
-------------
 
	1.1 AboutUs 
	1.2 BrowsePrediction
	1.3 LoginActivity [incomplete implementation]
	1.4 MainActivity
	1.5 myPortfolio [incomplete implementation]
	1.6 searchPrediction
	1.7 ShowResult 
	1.8 SignUp [incomplete implementation]
	1.9 Ranking


---------------------------------------------------------------------------------------------------------
Here are the breakdown of Activities I have created:

1.1 AboutUs:
-----------

This is an activity which shows the about us page of iPredict in which contains the info of the company.
This page is almost completed but there are few bugs that need to be fix. 

The bugs I have found so far:
- It is not good in landscape mode or larger scren, text goes out of the box.
- If the cusor is visible in the textbox then we cannot scroll to anywhere if we try to scroll in that textbox. 

Other than that, there could be an improvement here such as allowing User to send feedback with one click without calling
other intent to load an email app. 

 
1.2 BrowsePrediction:
--------------------

This is an activity that display the info from the JSON file. These info are read from the web under 'MyJSONReader'class. 
The 'MyJSONReader' class only gets the JSON information from the web once which means there are no updates. 
This need to fix as we need to get the update every 5 minutes because the iPredict stock info is being update in every 5 minutes.
Synchronise the time of the update with the web is also important otherwise there will be inconsistency in the results show on the web and
the mobile app.  

Other boxes such as 'Sort' and 'All' have not been implemented yet. The search by text at the moment only does a 
simple search such as name of the stock but not complicated search. At the moment reading from web is really slow
because of the large JSON file (As of 26/01/2016 reading is faster now because the JSON file is really small due to less stocks available). 
The major problem here is that sometimes the app crash when the Internet Connection lost half way while retrieving the info from the web 
but this case is really rare as now I have checked the socket timeout connection and its exception. 


1.3 LoginActivity:
-----------------

This is an activity that takes in the login info so that it can directs the user to their own portfolio page.
It is however incomplete as I have no database to read the users info from because iPredict is currently winding down. 
Temporary this page just directs the user to the portfolio page. 


1.4 MainActivity:
----------------

This is the home page of the app. This page is almost completed except with one thing, the tweet button.
Currently the tweet button does nothing. 

This home page loads upon start of the app. Users can choose 'Start Trading' in order to direct to the 'Browse Prediction' page,
or they can choose to scroll down and read briefly on what iPredict is about and the 'Trade now' button also directs the users
to the 'Browse Prediction' page. Alternatively, there is a menu which allow users to choose many other different actions such as Login,
Signup etc.  


1.5 myPortfolio:
---------------
This is the porfolio page of the user where all info of the user are displayed here. This page is incomplete. 


1.6 searchPrediction:
--------------------
This page loads and display the predictions that users selected from the 'BrowsePrediction' page. It currently show the list of the stocks
where users can expanded or contracted. There are two majors info showing here, one is the Category name and the other is the Subcategories
that shows under the Category of the stock. Changing from portrait to landscape and vice versa is ok as the info is saved and reload. 

One thing that need further improvement here is that we need to add picture next to category name of the stock according to the design. 


1.7 ShowResult:
--------------
This page shows the result of the stock selected previously at the 'searchPrediction' page. 
Info on this page shows things such as the title of the stock, its description, last trade time, last trade price, today's
volume, average daily volume, change, status, start date, end date, long description, stock history, current orders (top 10 sellers and buyers),
juding criteria as well as Facebook and Twitter buttons for sharing.  

There are two things that need to change here, one is the Stock history graph and the other is the share buttons. Both of these are currently
do nothing. The stock history graph must show the diagram for that stock similar to the one shown in the Design of the app. The share buttons
allows the users to share the info to either Twitter or Facebook which has not been implemented yet in this application. 


1.8 Signup: 
----------
This page is for the user to sign up. This page is currently under developement. 


1.9 Ranking:
-----------
This is the ranking page showing the list of ranking. This page shows the users two things, one is the traders ranking info under most ROI and 
the other one is the traders ranking info on the most Net Worth. 

There is a few things left to do in this page, one is the ability to expand the list and contract, second is saved the state of the app so we
reloaded back the info. The heading for the top traders under the Net Worth is incorrect and need to change accordingly if we were to changed
the list display to either the top traders with highest ROI or highest Net Worth. 


---------------------------------------------------------------------------------------------------------

2. Classes:
----------

	2.1 BookAndStock
	2.2 ContractInfo
	2.3 CustomAdapter
	2.4 ExpanableListAdapter 
	2.5 Model
	2.6 MyJSONReader
	2.7 StockItem
	2.8 Traders
	2.9 NetworthCustomAdapter
	2.10 ROICustomAdapter
	2.11 ProportionalImageView
	2.12 ReadingTopTraders


---------------------------------------------------------------------------------------------------------
Here are the breakdown of classes I have created:

2.1 BookAndStock:
----------------
 
This class constructs object which is the stock that is to buy or sell. It contains the type of the order, quantity and the price.
We can also parse the object to the other activity as parcelable for this class is implemented in there.   


2.2 ContractInfo:
----------------

This class constructs the contract object where it contains all the info of the contract that got from JSON online. There info are things
such as the name of the stock, the category it belongs to, its description, price of the stock, last trade price, change today, volume, average
daily volume, status, start date of the stock, end date, the last trade time, short description, long description, and judege statement as well as the 
list of top 10 buy orders and sell orders. This object is also parcelable to the other activities. 


2.3 CustomAdapter:
-----------------

This is a custom adapter use in the listview to display the text together with the checkbox in the 'Browse Prediction' page.


2.4 ExpandableListAdapter:
-------------------------

This is another custom adapter which is use to display the items in the list view in which we want them to be expandable. 


2.5 Model:
---------

This model class contructs the object which has the name and its value. This value tells us whether the checkbox
is selected or not. 


2.6 MyJSONReader:
----------------

This is a class that reads the info from the JSON file in the web. By using the Json parser we can get all the info from the web and parse
that to an object which we can  then manipulate later to get the information. All the read info are stored in the arraylist containing all
contract information where we can then use it to display the results.  


2.7 StockItem:
-------------

This class store the stock info of the selected categories. It contains the info such as the name of the stock, its price and the changes. 


2.8 Traders:
-----------

This class contains the information regarding the traders such as their rank, name, ROI, Networth, and Change. 


2.9 NetworthCustomAdapter:
-------------------------

This is another adapter which is use to deal with the Networth tab under the Ranking page.


2.10 ROICustomAdapter:
---------------------

This is another adapter which is use to deal with the ROI tab under the Ranking page.


2.11 ProportionalImageView:
--------------------------

This class makes the Image in the ImageView increase proportionally to the screen resoultion. Coding for this is from the Internet.


2.12 ReadingTopTraders:
----------------------

This class reads the information from the web which is in XML and retrieve that info programatically. It retrieved two lists, one
is the list of top traders with the most ROI while the other list is top traders with the most Networth. When retrieved the info,
I have also formatted the String abit so that it display a proper text. The information fetched are according to the current date
and time, so we are not outdated. It always update when we reenter the Ranking page. 


---------------------------------------------------------------------------------------------------------

3. Layout:
---------

	3.1 activity_about_us
	3.2 activity_browse_prediction
	3.3 activity_login
	3.4 activity_main
	3.5 activity_my_portfolio
	3.6 activity_search_prediction
	3.7 activity_show_result
	3.8 activity_sign_up
	3.9 border
	3.10 grouplist
	3.11 mybutton
	3.12 mybutton2
	3.13 mybutton3
	3.14 mybutton4 
	3.15 result_prediction_row
	3.16 row
	3.17 traders_roi
	3.18 traders_networth
	3.19 activity_ranking 


---------------------------------------------------------------------------------------------------------
Here are the breakdown of Layout I have created:

3.1 activity_about_us:
---------------------

This is the layout for the about us activity. The images are loaded programatically as it first need to resize using Bitmap.
This layout has no warning or error. 


3.2 activity_browse_prediction:
------------------------------

This is the layout for the browse prediction activity. There is one warning in this layout as nested weights are bad for performance.
Fixing this would be something to do next. 


3.3 activity_login:
------------------

This is the layout for the login activity. The place where users can login to their account. This loads directly from the login activity 
chosen when first created the activity, so most code here are originally generated with little change such as changing display text.
There are no error or warning in this layout.   


3.4 activity_main:
-----------------

This is the layout for the main activity. All the images are loaded programatically as it first need to rezie using Bitmap.
This layout has no error or warning. 


3.5 activity_my_portfolio:
-------------------------

This is the layout for my portfolio activity. At the current stage there is nothing in this page.  


3.6 activity_search_prediction:
------------------------------

This is the layout for the search predicion activity. It is a simple layout that only has the expanable list view.
The improvement here require to add a picture next to each of the list item according to the design.  
There are no error or warning in this layout. 


3.7 activity_show_result:
------------------------

This is the layout for the show result activity. All the information are loaded programatically. There are three things that
needed to fix in this layout. One is the correct image of the share buttons (Twitter and Facebook) as I am currently just use
a random Twitter image. The other thing to look at is the stock history graph. This is a graph that shows the history price 
of the stock we are currently viewing. Last but not least, the 3 buttons at the bottom of the screen, 'Watch', 'buy as bundle',
and 'trade'. These three buttons are currently does nothing. Other than that, all other info are loaded and display correct.  

There are quite a number of warnings in this page but all are the hard code text for display, but there are no any error.  


3.8 activity_sign_up:
--------------------

This is the layout for the sign up activity. At the current stage there is nothing in this page. 


3.9 border:
----------

This is a custom drawing which is a border that is use to wrap around text in the 'About Us' page. This is practically just  
shape which use to draw a border. 


3.10 grouplist:
--------------




3.11 mybutton: 
-------------

This is just a custom button design which use throughout the app. 

3.12 mybutton2: 
--------------

This is just a custom button design which use throughout the app. 

3.13 mybutton3:
--------------

This is just a custom button design which use throughout the app. 

3.14 mybutton4:
--------------

This is just a custom button design which use throughout the app. 


3.15 result_prediction_row:
--------------------------

This is a text view of stock name together with its price and change. This is needed to put
under the list view which require the use of the expandable list adapter. 


3.16 row:
---------

This is a texgt view together with a text box. This is needed to put under the list view 
which require the use of the custom adapter. 


---------------------------------------------------------------------------------------------------------

4. Install/Run Instruction:
--------------------------

I have wrote the code under the Android Studio. There are three ways that I knew how to run the program:


	1. Run the program via the emulator within the app. 

	2. Connect the Android phone via USB and ran the program via the connected device. 

	3. Run the program by export the APK file and test under the Android phone.


For 1)

- Choose an appropriate emulator to run the program.
- Do note that using the emulator is not like testing on the real device. They tend to be slower and some functions
are not working as expected. 

For 2)

- Ran via USB connection. Instead of emulator, just connect the Android phone and ran.

For 3)

- Export the release version of the app and put it to the phone.
- On the Android phone, just click on the app to proceed the installation process. The app do not require any authentication
nor does it collect any info. The permission it asked is just the Interntet Connection. 


[-----Extra Note-----]

I have generated a simple UML diagram. The UML diagram can be viewed in Android Studio if you have the SimpleUML plugin installed.
You can install the Simple UML plugin by:

On Windows: Preferences -> Plugins -> Browse Reposities 

Then search for the SimpleUMLCE. Install the plugin and restart the application. You can open the generated UML diagram now. 


---------------------------------------------------------------------------------------------------------

5. Activity Flow:
----------------

The diagram below shows how my Android app structures. This is only showing the Activity not Classes. At the current stage
of the development, only the home page has the ability to go to the other pages, where as other pages can only go back or forth. 


		       __________________
		      |		         |
		  |-->|   LoginActivity  |
		  |   |__________________|
		  |   
		  |
		  |    __________________
		  |   |		         |
		  |-->|      SignUp      |
		  |   |__________________|
		  |
		  |
 ______________   |    __________________	 __________________        ____________
|	       |  |   |	                 |	|                  |	  |            |
| MainActivity |----->| BrowsePrediction |----->| searchPrediction |----->| ShowResult |
|______________|  |   |__________________|      |__________________|      |____________|
		  |
		  |
		  |    __________________
		  |   |			 |
		  |-->|      AboutUs     |
		  |   |__________________|
		  |   
		  |
		  |    __________________
		  |   |                  |
		  |-->|      Ranking     |
		      |__________________|
		  

---------------------------------------------------------------------------------------------------------

6. Future Work:
--------------

At the current stage of the development, only about 50% of work is completed. The other 50% is on the implementation about the users. 
These things are like grabbing users info from database when they login and register them to the database if they are looking for sign up. 
Once the users are login, they would have their own portfolio page as well as the deposit / withdraw / trade page. 

Apart from the above, we also need to implement pages such as the help page and forum page. The trade page would be the most easiest one here 
as it only contains the Q&A. Below is the list of activities that need to develop:

	1. Signup Page
	2. Portfolio page
	3. Deposit page
	4. Withdraw page
	5. Trade page
	6. Bundle page
	7. Help page
	8. Forum page


---------------------------------------------------------------------------------------------------------

7. Bugs and Other things:
------------------------

Pictures used in this app is mostly provided by iPredict. Only images such as Facebook and Twitter are used from the Internet. 

These are a summary of bugs I have found in the app:

- While working on the App, I have tested it through a device (ony Ericsson Xperia Arc S running Android 4.04). It worked with
no major problems. When I tested on another phone (Sony running Android 5.1.1), the app crash when we re-enter the Ranking page.

- While retrieving the information from the web, if the Internet connection suddently lost a connection then the app will crash. 
This is also the same when you rotate the screen while retrieving the data. 

- The Browse Prediction page (the page where it list all possible predictions), at the moment it does not have the ability to save
state and reload the state back if the screen orientation changes. 

- Home page may causes memory leaked as there is a sudden spiked in memeory when the orientation changes. This spike is only
a brief moment though. 

- For sorting the information of the stocks, at the moment it only list all stocks it retrieved from the test page. It does not 
do anything fancy yet.

- Other things include changing the ROI to a correct calculation amount and decimal place should include 0 at the end as well to complete a 2dp. 